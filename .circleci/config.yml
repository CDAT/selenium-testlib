version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       git clone https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -l $LAST_STABLE -B 0 -p $PKG_NAME -b $CIRCLE_BRANCH --do_rerender

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority strict
       cat ~/.condarc
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME --build_version $BUILD_VARIANT_VER --do_build

  - &setup_selenium_testlib_env
    name: setup_selenium_testlib_env
    environment:
       PKGS: "cdat_info testsrunner"
       CHANNELS: "-c cdat/label/nightly -c conda-forge"
    command: |
       echo "*** setup_selenium_testlib_env ***"
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda create -y -n $ENV_NAME --use-local $CHANNELS "$CONDA_PY_VER" $PKG_NAME $PKGS
       conda activate $ENV_NAME
       pip install selenium
       pip install pyvirtualdisplay
       conda list

  - &run_tests
    name: run_tests
    environment:
      BROWSER_TYPE: "chrome"
      BROWSER_DRIVER: "/usr/local/bin/chromedriver"
    command: | 
       export PATH=$WORKDIR/miniconda/bin:$PATH
       echo "*** run_tests ****"
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       python run_tests.py -H -v2

  - &conda_upload
    name: conda_upload
    command: |
       #if [[ $CIRCLE_BRANCH != "master" ]]; then
       #   exit 0
       #fi
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       UPLOAD_OPTIONS="-t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL"
       anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

jobs:
   linux_selenium_testlib:
      docker:
         - image: circleci/node:stretch-browsers
      environment:
         WORKDIR: "/home/circleci/project/linux_build"
         PKG_NAME: "selenium-testlib"
         ENV_NAME: "selenium-testlib"
         LAST_STABLE: "1.0"
         CONDA_PY_VER: "python>=3.7,<3.8"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout 
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: ls -l $WORKDIR/selenium-testlib/.ci_support
         - run: *conda_build
         - run: *setup_selenium_testlib_env
         - run: *run_tests
         - persist_to_workspace:
              root: .
              paths: 
                 - linux_build

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: "/home/circleci/project/linux_build"
         PKG_NAME: "selenium_testlib"
         VERSION: "1.0"
         USER: "cdat"
         LABEL: "nightly"
      steps:
         - attach_workspace:
              at: .
         - run: pwd
         - run: ls -l linux_build
         - run: ls -l linux_build/miniconda
         - run: ls -l linux_build/miniconda/conda-bld
         - run: ls -l linux_build/miniconda/conda-bld/noarch
         - run: *conda_upload

workflows:
   version: 2
   selenium_testlib:
      jobs:
         - linux_selenium_testlib
         - upload:
              requires:
                 - linux_selenium_testlib
